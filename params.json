{"name":"obop","tagline":"MongoDB-style object operators makes array manipulation easy: where/order/update/view","body":"# obop\r\n\r\nMongoDB-style object operators makes array manipulation easy: where/order/update/view\r\n\r\n## SYNOPSIS\r\n\r\n### Node.js Environment\r\n\r\n```js\r\nvar obop = require('obop')();\r\nvar src = [ { a: 1 }, { a: 2 }, { a: 3 } ];\r\nvar out = obop.where( src, { a: 2 } ); // => [ { a: 2 } ]\r\n```\r\n\r\nInstall [obop](http://npmjs.org/package/obop) module via npm.\r\n\r\n### Browser Envorinment\r\n\r\n```html\r\n<script src=\"obop.min.js\"></script>\r\n<script>\r\n  var src = [ { a: 1 }, { a: 2 }, { a: 3 } ];\r\n  var out = obop.where( src, { a: 2 } ); // => [ { a: 2 } ]\r\n</script>\r\n```\r\n\r\nDownload [obop.min.js](https://raw.github.com/kawanet/obop/master/build/obop.min.js) browser build of this module.\r\n\r\n## METHODS\r\n\r\nSee [document](http://kawanet.github.io/obop/docs/obop.html) for more detail.\r\n\r\n### Query Selectors\r\n\r\n[where()](http://kawanet.github.io/obop/docs/obop.html#where) method supports the following query selectors:\r\n\r\n```js\r\n{ field: value }                            // equal to\r\n{ field: { $gt: value } }                   // greater than\r\n{ field: { $gte: value } }                  // greater than or equal to\r\n{ field: { $in: [value1, value2, ... ] } }  // in\r\n{ field: { $lt: value } }                   // less than\r\n{ field: { $lte: value } }                  // less than or equal to\r\n{ field: { $ne: value } }                   // not equal to\r\n{ field: { $nin: [ value1, value2 ... ]} }  // not in\r\n{ $or: [ { query1 }, { qury2 }, ... ] }     // logical OR\r\n{ $and: [ { query1 }, { query2 }, ... ] }   // logical AND\r\n{ field: { $not: { query } } }              // not\r\n{ field: { $exists: boolean } }             // exists\r\n{ field: { $size: value } }                 // array size\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nvar out1 = obop.where( src1, { genre: 'fruit', price: { $gt: 100, $gt: 200 } } );\r\nvar out2 = obop.where( src2, { 'review.score': { $gte: 4.0 } } );\r\n```\r\n\r\n### Sort Parameters\r\n\r\n[order()](http://kawanet.github.io/obop/docs/obop.html#order) method supports the following styles of sort parameters:\r\n\r\n```js\r\n{ field: 1 }                                // ascending\r\n{ field: -1 }                               // descending\r\n{ field1: 1, field2: -1, ... }              // combination\r\n[ [ 'field1', 1 ], [ 'field2', -1 ], ... ]  // array style\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nvar out1 = obop.order( src1, { price: 1, stock: -1 } );\r\nvar out2 = obop.order( src2, [['price', 1], ['stock', -1]] ); // same as above\r\n```\r\n\r\n### Update Operators\r\n\r\n[update()](http://kawanet.github.io/obop/docs/obop.html#update) method supports the following update operators:\r\n\r\n```js\r\n{ $set: { field: value } }                  // set value\r\n{ $unset: { field: '' } }                   // remove field\r\n{ $rename: { oldname: newname } }           // rename field\r\n{ $inc: { field: amount } }                 // increment value\r\n{ $pull: { field: query } }                 // remove item from array\r\n{ $push: { field: value } }                 // add item to array\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nvar out1 = obop.order( src1, { $inc: { stock: -1 }, $set: { 'review.score': 4 } } );\r\nvar out2 = obop.order( src2, { $unset: { order: '' } } );\r\n```\r\n\r\n### Projection Parameters\r\n\r\n[view()](http://kawanet.github.io/obop/docs/obop.html#view) method supports the following styles of projection parameters:\r\n\r\n```js\r\n{ field1: 1 }                               // output fields1 only\r\n{ field1: 1, field2: 1, ... }               // output fields1, 2 and more\r\n{ field1: 0 }                               // output all fields except for fields1\r\n{ field1: 0, field2: 0, ... }               // except fields1, 2 and more\r\n```\r\n\r\nExample:\r\n\r\n```js\r\nvar out1 = obop.view( src1, { name: 1, price: 1, stock: 1 } );  // include fields\r\nvar out2 = obop.view( src2, { _id: 0, secret: 0 } );            // exclude fields\r\n```\r\n\r\n## LINKS\r\n\r\n### Sources\r\n\r\nhttps://github.com/kawanet/obop\r\n\r\n### Browser Build\r\n\r\nhttps://raw.github.com/kawanet/obop/master/build/obop.min.js\r\n\r\n### Documentation\r\n\r\nhttp://kawanet.github.io/obop/docs/obop.html\r\n\r\n### Author\r\n\r\nhttps://github.com/kawanet\r\n\r\n## LICENCE\r\n\r\nCopyright 2013 @kawanet\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-835919-19","note":"Don't delete this file! It's used internally to help with page regeneration."}